<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkobjectbase.h</FILENAME>
      <LINE>222</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'vtkObjectBase::WeakPointers' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>vtkObjectBase::{ctor}</FUNCTION>
    <DECORATED>??0vtkObjectBase@@IEAA@AEBV0@@Z</DECORATED>
    <FUNCLINE>222</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkvariantinlineoperators.h</FILENAME>
      <LINE>15</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>6287</DEFECTCODE>
    <DESCRIPTION>重複するコードです: 左と右のサブ式が同一です。</DESCRIPTION>
    <FUNCTION>IsSigned64Bit</FUNCTION>
    <DECORATED>?IsSigned64Bit@@YA_NH@Z</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkcellarray.h</FILENAME>
      <LINE>90</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkCellArray::EstimateSize</FUNCTION>
    <DECORATED>?EstimateSize@vtkCellArray@@QEAA_J_JH@Z</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructureddata.h</FILENAME>
      <LINE>265</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredData::GetStructuredCoordinates</FUNCTION>
    <DECORATED>?GetStructuredCoordinates@vtkStructuredData@@KAX_JHHAEAH11@Z</DECORATED>
    <FUNCLINE>260</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructureddata.h</FILENAME>
      <LINE>266</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredData::GetStructuredCoordinates</FUNCTION>
    <DECORATED>?GetStructuredCoordinates@vtkStructuredData@@KAX_JHHAEAH11@Z</DECORATED>
    <FUNCLINE>260</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructureddata.h</FILENAME>
      <LINE>266</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredData::GetStructuredCoordinates</FUNCTION>
    <DECORATED>?GetStructuredCoordinates@vtkStructuredData@@KAX_JHHAEAH11@Z</DECORATED>
    <FUNCLINE>260</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructureddata.h</FILENAME>
      <LINE>310</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredData::GetNumberOfPoints</FUNCTION>
    <DECORATED>?GetNumberOfPoints@vtkStructuredData@@SA_JQEAHH@Z</DECORATED>
    <FUNCLINE>308</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructureddata.h</FILENAME>
      <LINE>310</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredData::GetNumberOfPoints</FUNCTION>
    <DECORATED>?GetNumberOfPoints@vtkStructuredData@@SA_JQEAHH@Z</DECORATED>
    <FUNCLINE>308</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructureddata.h</FILENAME>
      <LINE>311</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredData::GetNumberOfPoints</FUNCTION>
    <DECORATED>?GetNumberOfPoints@vtkStructuredData@@SA_JQEAHH@Z</DECORATED>
    <FUNCLINE>308</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructureddata.h</FILENAME>
      <LINE>311</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredData::GetNumberOfPoints</FUNCTION>
    <DECORATED>?GetNumberOfPoints@vtkStructuredData@@SA_JQEAHH@Z</DECORATED>
    <FUNCLINE>308</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructureddata.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredData::GetNumberOfPoints</FUNCTION>
    <DECORATED>?GetNumberOfPoints@vtkStructuredData@@SA_JQEAHH@Z</DECORATED>
    <FUNCLINE>308</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructureddata.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredData::GetNumberOfPoints</FUNCTION>
    <DECORATED>?GetNumberOfPoints@vtkStructuredData@@SA_JQEAHH@Z</DECORATED>
    <FUNCLINE>308</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkstructuredgrid.h</FILENAME>
      <LINE>295</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkStructuredGrid::GetNumberOfCells</FUNCTION>
    <DECORATED>?GetNumberOfCells@vtkStructuredGrid@@UEAA_JXZ</DECORATED>
    <FUNCLINE>280</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>voxelmeshgeneratorbyvtk.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'VoxelMeshGeneratorByVtk::bounds' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>VoxelMeshGeneratorByVtk::{ctor}</FUNCTION>
    <DECORATED>??0VoxelMeshGeneratorByVtk@@QEAA@XZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>voxelmeshgeneratorbyvtk.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'VoxelMeshGeneratorByVtk::offsets' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>VoxelMeshGeneratorByVtk::{ctor}</FUNCTION>
    <DECORATED>??0VoxelMeshGeneratorByVtk@@QEAA@XZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>voxelmeshgeneratorbyvtk.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'VoxelMeshGeneratorByVtk::mins' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>VoxelMeshGeneratorByVtk::{ctor}</FUNCTION>
    <DECORATED>??0VoxelMeshGeneratorByVtk@@QEAA@XZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>voxelmeshgeneratorbyvtk.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'VoxelMeshGeneratorByVtk::cellDims' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>VoxelMeshGeneratorByVtk::{ctor}</FUNCTION>
    <DECORATED>??0VoxelMeshGeneratorByVtk@@QEAA@XZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>voxelmeshgeneratorbyvtk.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'VoxelMeshGeneratorByVtk::meshPitches' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>VoxelMeshGeneratorByVtk::{ctor}</FUNCTION>
    <DECORATED>??0VoxelMeshGeneratorByVtk@@QEAA@XZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1438</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1437</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1437</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1436</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1436</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1436</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1436</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>