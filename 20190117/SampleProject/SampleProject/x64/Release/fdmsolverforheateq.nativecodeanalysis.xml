<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkobjectbase.h</FILENAME>
      <LINE>222</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'vtkObjectBase::WeakPointers' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>vtkObjectBase::{ctor}</FUNCTION>
    <DECORATED>??0vtkObjectBase@@IEAA@AEBV0@@Z</DECORATED>
    <FUNCLINE>222</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkvariantinlineoperators.h</FILENAME>
      <LINE>15</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>6287</DEFECTCODE>
    <DESCRIPTION>重複するコードです: 左と右のサブ式が同一です。</DESCRIPTION>
    <FUNCTION>IsSigned64Bit</FUNCTION>
    <DECORATED>?IsSigned64Bit@@YA_NH@Z</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>fdmsolverforheateq.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'FDMSolverForHeatEq::wallXYZBC' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>FDMSolverForHeatEq::{ctor}</FUNCTION>
    <DECORATED>??0FDMSolverForHeatEq@@QEAA@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>fdmsolverforheateq.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'FDMSolverForHeatEq::cellDims' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>FDMSolverForHeatEq::{ctor}</FUNCTION>
    <DECORATED>??0FDMSolverForHeatEq@@QEAA@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>fdmsolverforheateq.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'FDMSolverForHeatEq::alpha' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>FDMSolverForHeatEq::{ctor}</FUNCTION>
    <DECORATED>??0FDMSolverForHeatEq@@QEAA@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>fdmsolverforheateq.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'FDMSolverForHeatEq::deltas' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>FDMSolverForHeatEq::{ctor}</FUNCTION>
    <DECORATED>??0FDMSolverForHeatEq@@QEAA@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>fdmsolverforheateq.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'FDMSolverForHeatEq::dt' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>FDMSolverForHeatEq::{ctor}</FUNCTION>
    <DECORATED>??0FDMSolverForHeatEq@@QEAA@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>fdmsolverforheateq.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'FDMSolverForHeatEq::lengths' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>FDMSolverForHeatEq::{ctor}</FUNCTION>
    <DECORATED>??0FDMSolverForHeatEq@@QEAA@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1438</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1437</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1437</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1436</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1436</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1436</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\local\vtk\vtk-8.1.2\install\include\vtk-8.1</FILEPATH>
      <FILENAME>vtkmath.h</FILENAME>
      <LINE>1436</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>vtkDeterminant3x3</FUNCTION>
    <DECORATED>??$vtkDeterminant3x3@M@@YANQEAY02M@Z</DECORATED>
    <FUNCLINE>1434</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>vtkindexutility.h</FILENAME>
      <LINE>21</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>VtkIndexUtility::ConvertVtkCellIdToXYZ</FUNCTION>
    <DECORATED>??$ConvertVtkCellIdToXYZ@_J@VtkIndexUtility@@YAPEB_JAEB_JQEBH@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>vtkindexutility.h</FILENAME>
      <LINE>25</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>VtkIndexUtility::ConvertVtkCellIdToXYZ</FUNCTION>
    <DECORATED>??$ConvertVtkCellIdToXYZ@_J@VtkIndexUtility@@YAPEB_JAEB_JQEBH@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\sandbox\sampleproject\sampleproject</FILEPATH>
      <FILENAME>vtkindexutility.h</FILENAME>
      <LINE>28</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>VtkIndexUtility::ConvertVtkCellIdToXYZ</FUNCTION>
    <DECORATED>??$ConvertVtkCellIdToXYZ@_J@VtkIndexUtility@@YAPEB_JAEB_JQEBH@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>